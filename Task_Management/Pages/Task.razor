@page "/Task"
@inject Task_Management.DAL.Contexto Contexto
@inject NavigationManager NavigationManager
@using Task_Management.Model;
@using Task_Management.Service;


<EditForm Model="@taskmodel" OnValidSubmit="@AddTask">
    <DataAnnotationsValidator />
    <div class="card-header">
        <h3>Agregar Tarea</h3>
    </div>
     <div class="input-group">
    <div class="card-body">
        <div class="container overflow-hidden">
            <div class="row gy-6">
                <div class="form-group">
                    <InputNumber id="Id" @bind-Value="taskmodel.Id" class="form-control" />
                    <button type="button" class="input-group-text btn btn-primary" @onclick="SearchTask">
                        <i class="oi oi-magnifying-glass" />
                    </button>
                </div>
                <div class="form-group">
                    <label for="Title">Título:</label>
                    <InputText id="Title" @bind-Value="taskmodel.Title" class="form-control" />
                </div>

                <div class="form-group">
                    <label for="Description">Descripción:</label>
                    <InputText id="Description" @bind-Value="taskmodel.Description" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="DueDate">Fecha de Vencimiento:</label>
                    <InputDate id="DueDate" @bind-Value="taskmodel.DueDate" class="form-control" />
                </div>
                <div class="col-4">
                    <div class="mb-3">
                        <label for="Priority">Prioridad:</label>
                        <select class="form-select" @bind="taskmodel.Priority">
                            <option value="Baja">Baja</option>
                            <option value="Media">Media</option>
                            <option value="Alta">Alta</option>
                        </select>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="mb-3 text-center" display: inline-block>
                        <button type="submit" class="btn btn-primary">Agregar</button>
                        <button type="button" class="btn btn-warning" @onclick="UpdateTask">Editar</button>
                        <button type="button" class="btn btn-danger" @onclick="DeleteTask">Eliminar</button>
                    </div>
                </div>
            </div>
        </div>
        </div>
    </div>
   
    <ValidationSummary />
</EditForm>

@code {

    public string Filtro { get; set; } = "";

    private TaskModel taskmodel = new TaskModel();
    [Inject]
    private TasksService tasksService { get; set; }
    private void AddTask()
    {
        tasksService.AddTask(taskmodel);
        taskmodel = new TaskModel();
    }
    private void SearchTask()
    {
        var resultTask = tasksService.BuscarTask(taskmodel.Id);
        if (resultTask != null)
        {
            taskmodel = resultTask;
        }
        else
        {
            // Handle when task is not found
        }
    }


    private void UpdateTask()
    {
        var existingTask = tasksService.BuscarTask(taskmodel.Id);
        if (existingTask != null)
        {
            existingTask.Title = taskmodel.Title;
            existingTask.Description = taskmodel.Description;
            existingTask.DueDate = taskmodel.DueDate;
            // existingTask.IsCompleted = taskmodel.IsCompleted;
            // existingTask.Priority = taskmodel.Priority;
            // existingTask.UserId = taskmodel.UserId;
            tasksService.ModificarTask(existingTask);
        }

        taskmodel = new TaskModel();
    }

    // private void SearchTask()
    // {
    //     tasksService.BuscarTask(taskmodel.Id);
    //     taskmodel = new TaskModel();
    // }

    private void DeleteTask()
    {
        tasksService.Eliminar(taskmodel.Id);
        taskmodel = new TaskModel();
    }

}